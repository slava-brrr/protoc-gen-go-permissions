// UnaryPermissionsInterceptor adds permissions to context based on gRPC method.
func UnaryPermissionsInterceptor() grpc.UnaryServerInterceptor {
    return func(ctx context.Context, req interface{}, info *grpc.UnaryServerInfo, handler grpc.UnaryHandler) (interface{}, error) {
        if p, ok := required_permissions[info.FullMethod]; ok {
            ctx = context.WithValue(ctx, contextKey, append([]Permission{}, p...))
        }
        return handler(ctx, req)
    }
}

// PermissionsFromContext retrieves permissions from context.
// NOTE: it relies on UnaryPermissionsInterceptor.
func PermissionsFromContext(ctx context.Context) []Permission {
    if p, ok := ctx.Value(contextKey).([]Permission); ok {
        return p
    }
    return nil
}
